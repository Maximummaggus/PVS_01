services:
  rabbitmq:
    image: rabbitmq:3.13.6-management
    container_name: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: stockmarket
      RABBITMQ_DEFAULT_PASS: supersecret123
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"] 
      interval: 30s 
      timeout: 10s 
      retries: 3
      start_period: 5s 

  stock-publisher:
    build:
      context: ./stock-publisher
    environment:
      RABBITMQ_URL: amqp://stockmarket:supersecret123@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy 

  mongo1:
    image: mongo:5.0
    container_name: mongo1
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "sh", "-c", "echo \"try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }\" | mongosh --port 27017 --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo2:
    image: mongo:7.0
    container_name: mongo2
    ports:
      - "27018:27018"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "sh", "-c", "echo \"rs.status()\" | mongosh --port 27018 --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo3:
    image: mongo:7.0
    container_name: mongo3
    ports:
      - "27019:27019"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "sh", "-c", "echo \"rs.status()\" | mongosh --port 27019 --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  stock-consumer:
    build:
      context: ./stock-consumer
    environment:
      RABBITMQ_URL: amqp://stockmarket:supersecret123@rabbitmq:5672/
      MONGODB_URL: mongodb://host.docker.internal:27017,host.docker.internal:27018,host.docker.internal:27019/?replicaSet=rs0
      QUEUE_NAME: stock_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy

volumes:
  mongo1_data:
  mongo1_config:
  mongo2_data:
  mongo2_config:
  mongo3_data:
  mongo3_config:
