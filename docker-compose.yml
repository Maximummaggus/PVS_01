version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.13.6-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: stockmarket
      RABBITMQ_DEFAULT_PASS: supersecret123
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics ping" ] # Check if RabbitMQ is running
      interval: 30s # Check every 30 seconds
      timeout: 10s # Timeout after 10 seconds
      retries: 3 # Retry 3 times before giving up
      start_period: 5s # Start checking after 10 seconds

  stock-publisher:
    build:
      context: ./stock-publisher
    environment:
      RABBITMQ_URL: amqp://stockmarket:supersecret123@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy

  mongo:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: [ "CMD-SHELL", "mongo --eval 'db.adminCommand(\"ping\")' || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  stock-consumer:
    build:
      context: ./stock-consumer
    environment:
      RABBITMQ_URL: amqp://stockmarket:supersecret123@rabbitmq:5672/
      MONGODB_URL: mongodb://localhost:27017/
      QUEUE_NAME: stock_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
